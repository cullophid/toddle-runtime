{"version":3,"sources":["../src/default/defaultMedia.js","../src/utility/getCachedConfig.js","../src/default/defaultThemeMap.js","../src/utility/createMemo.js","../src/utility/composers.js","../src/utility/define.js","../src/utility/hasNames.js","../src/utility/hasOwn.js","../src/convert/toHyphenCase.js","../src/convert/toPolyfilledValue.js","../src/convert/toResolvedMediaQueryRanges.js","../src/convert/toResolvedSelectors.js","../src/convert/toSizingValue.js","../src/convert/toTailDashed.js","../src/convert/toTokenizedValue.js","../src/convert/toCssRules.js","../src/convert/toCamelCase.js","../src/convert/toHash.js","../src/features/css.js","../src/features/global.js","../src/features/keyframes.js","../src/ThemeToken.js","../src/features/theme.js","../src/createSheet.js","../src/createCss.js","../src/index.js"],"names":["cachedConfig","defaultMedia","all","colors","sizes","space","defaultThemeMap","gap","gridGap","columnGap","gridColumnGap","rowGap","gridRowGap","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","margin","marginTop","marginRight","marginBottom","marginLeft","marginBlock","marginBlockEnd","marginBlockStart","marginInline","marginInlineEnd","marginInlineStart","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingBlock","paddingBlockEnd","paddingBlockStart","paddingInline","paddingInlineEnd","paddingInlineStart","top","right","bottom","left","scrollMargin","scrollMarginTop","scrollMarginRight","scrollMarginBottom","scrollMarginLeft","scrollMarginX","scrollMarginY","scrollMarginBlock","scrollMarginBlockEnd","scrollMarginBlockStart","scrollMarginInline","scrollMarginInlineEnd","scrollMarginInlineStart","scrollPadding","scrollPaddingTop","scrollPaddingRight","scrollPaddingBottom","scrollPaddingLeft","scrollPaddingX","scrollPaddingY","scrollPaddingBlock","scrollPaddingBlockEnd","scrollPaddingBlockStart","scrollPaddingInline","scrollPaddingInlineEnd","scrollPaddingInlineStart","fontSize","background","backgroundColor","backgroundImage","border","borderBlock","borderBlockEnd","borderBlockStart","borderBottom","borderBottomColor","borderColor","borderInline","borderInlineEnd","borderInlineStart","borderLeft","borderLeftColor","borderRight","borderRightColor","borderTop","borderTopColor","caretColor","color","columnRuleColor","fill","outline","outlineColor","stroke","textDecorationColor","fontFamily","fontWeight","lineHeight","letterSpacing","blockSize","minBlockSize","maxBlockSize","inlineSize","minInlineSize","maxInlineSize","width","minWidth","maxWidth","height","minHeight","maxHeight","flexBasis","gridTemplateColumns","gridTemplateRows","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderStyle","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","boxShadow","textShadow","transition","zIndex","stringifyReplacer","name","data","()","Function","prototype","toString","call","createMemo","cache","Object","create","value","apply","args","vjson","JSON","stringify","$$composers","Symbol","for","define","target","source","defineProperties","getOwnPropertyDescriptors","hasNames","hasOwnProperty","toHyphenCase","includes","replace","capital","toLowerCase","splitBySpace","split","fn","String","toPolyfilledValue","appearance","d","WebkitAppearance","backfaceVisibility","WebkitBackfaceVisibility","backdropFilter","WebkitBackdropFilter","backgroundClip","WebkitBackgroundClip","boxDecorationBreak","WebkitBoxDecorationBreak","clipPath","WebkitClipPath","content","test","hyphens","WebkitHyphens","maskImage","WebkitMaskImage","tabSize","MozTabSize","textSizeAdjust","WebkitTextSizeAdjust","userSelect","WebkitUserSelect","s","e","maxSize","b","i","minSize","mqunit","toResolvedSelectors","parentSelectors","nestedSelectors","length","reduce","resolvedSelectors","parentSelector","push","map","selector","toSizingValue","declarationName","declarationValue","sizeProps","lead","main","tail","toTailDashed","toTokenizedValue","prefix","scale","$0","direction","multiplier","separator","token","comma","toStringOfObject","toCssRules","style","selectors","conditions","config","onCssText","currentRule","lastUtil","lastPoly","walk","style2","selectors2","conditions2","each","style3","isAtRuleLike","charCodeAt","datas","Array","isArray","isRuleLike","camelName","toUpperCase","utils","util","poly","media","slice","__","p1","o1","p2","o2","p3","isP1Value","shift","_","v","u","Number","nextConditions","concat","nextSelections","toCssString","unitProps","themeMap","declarations","condition","join","animationDelay","animationDuration","backgroundSize","borderBlockEndWidth","borderBlockStartWidth","borderBlockWidth","borderEndEndRadius","borderEndStartRadius","borderInlineEndWidth","borderInlineStartWidth","borderInlineWidth","borderSpacing","borderStartEndRadius","borderStartStartRadius","columnRule","columnRuleWidth","columnWidth","containIntrinsicSize","gridAutoColumns","gridAutoRows","offsetDistance","offsetRotate","outlineOffset","outlineWidth","overflowClipMargin","perspective","shapeMargin","textDecoration","textDecorationThickness","textIndent","textUnderlineOffset","transitionDelay","transitionDuration","verticalAlign","wordSpacing","toAlphabeticChar","code","fromCharCode","toHash","x","Math","abs","toAlphabeticName","h","toPhash","createComponentFunctionMap","createComponentFunction","sheet","componentType","composers","Set","arg","type","composer","add","createComposer","size","createRenderer","variants","initSingularVariants","compoundVariants","initCompoundVariants","defaultVariants","initDefaultVariants","className","singularVariants","prefilledVariants","undefinedVariants","variantName","key","variantPairs","pair","vMatch","[object Object]","vStyle","variant","compoundVariant","css","initialClassName","baseClassNames","getPreparedDataFromComposers","render","props","emptyProps","css2","forwardProps","variantProps","@initial","has","classSet","composerBaseClass","composerBaseStyle","rules","styled","cssText","singularVariantsToAdd","getTargetVariantsToAdd","compoundVariantsToAdd","variantToAdd","vClass","variantClassName","onevar","allvar","iClass","inline","propClassName","trim","renderedClassName","combinedClassNames","combinedPrefilledVariants","combinedUndefinedVariants","targetVariants","isCompoundVariant","targetVariantsToAdd","vEmpty","vName","vOrder","vPair","pPair","didMatch","qOrder","query","createGlobalFunctionMap","createGlobalFunction","uuid","global","importIndex","indexOf","cssRules","themed","group","importValue","insertRule","createKeyframesFunctionMap","createKeyframesFunction","cssText2","ThemeToken","this","computedValue","variable","createThemeFunctionMap","createThemeFunction","themeObject","cssProps","propertyName","propertyValue","theme","names","createSheet","root","groupSheet","reset","rules2","sheet2","deleteRule","splice","groupName","ownerRule","textContent","sheets","styleSheets","href","startsWith","location","origin","index","check","createCSSMediaRule","sourceCssText","import","undefined","match","cssRule","head","appendChild","document","createElement","cssRuleIndex","lastRuleCssText","addApplyToGroup","groupingRule","createCssMap","createCss","didRun","instance","initConfig","globalThis","config2","returnValue","keyframes","defaultTheme","getCssString","assign","getCachedConfig"],"mappings":"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","sourcesContent":["/** @type {{ all: 'all' }} */\nexport const defaultMedia = {\n\tall: 'all',\n}\n","import { createCss } from '../createCss.js'\n\nlet cachedConfig\n\nexport const getCachedConfig = () => cachedConfig || (cachedConfig = createCss())\n","const borderStyles = 'borderStyles'\nconst borderWidths = 'borderWidths'\nconst colors = 'colors'\nconst fonts = 'fonts'\nconst fontSizes = 'fontSizes'\nconst fontWeights = 'fontWeights'\nconst letterSpacings = 'letterSpacings'\nconst lineHeights = 'lineHeights'\nconst radii = 'radii'\nconst shadows = 'shadows'\nconst sizes = 'sizes'\nconst space = 'space'\nconst transitions = 'transitions'\nconst zIndices = 'zIndices'\n\n/** @type {DefaultThemeMap} */\nexport const defaultThemeMap = {\n\tgap: space,\n\tgridGap: space,\n\tcolumnGap: space,\n\tgridColumnGap: space,\n\trowGap: space,\n\tgridRowGap: space,\n\tinset: space,\n\tinsetBlock: space,\n\tinsetBlockEnd: space,\n\tinsetBlockStart: space,\n\tinsetInline: space,\n\tinsetInlineEnd: space,\n\tinsetInlineStart: space,\n\tmargin: space,\n\tmarginTop: space,\n\tmarginRight: space,\n\tmarginBottom: space,\n\tmarginLeft: space,\n\tmarginBlock: space,\n\tmarginBlockEnd: space,\n\tmarginBlockStart: space,\n\tmarginInline: space,\n\tmarginInlineEnd: space,\n\tmarginInlineStart: space,\n\tpadding: space,\n\tpaddingTop: space,\n\tpaddingRight: space,\n\tpaddingBottom: space,\n\tpaddingLeft: space,\n\tpaddingBlock: space,\n\tpaddingBlockEnd: space,\n\tpaddingBlockStart: space,\n\tpaddingInline: space,\n\tpaddingInlineEnd: space,\n\tpaddingInlineStart: space,\n\ttop: space,\n\tright: space,\n\tbottom: space,\n\tleft: space,\n\tscrollMargin: space,\n\tscrollMarginTop: space,\n\tscrollMarginRight: space,\n\tscrollMarginBottom: space,\n\tscrollMarginLeft: space,\n\tscrollMarginX: space,\n\tscrollMarginY: space,\n\tscrollMarginBlock: space,\n\tscrollMarginBlockEnd: space,\n\tscrollMarginBlockStart: space,\n\tscrollMarginInline: space,\n\tscrollMarginInlineEnd: space,\n\tscrollMarginInlineStart: space,\n\tscrollPadding: space,\n\tscrollPaddingTop: space,\n\tscrollPaddingRight: space,\n\tscrollPaddingBottom: space,\n\tscrollPaddingLeft: space,\n\tscrollPaddingX: space,\n\tscrollPaddingY: space,\n\tscrollPaddingBlock: space,\n\tscrollPaddingBlockEnd: space,\n\tscrollPaddingBlockStart: space,\n\tscrollPaddingInline: space,\n\tscrollPaddingInlineEnd: space,\n\tscrollPaddingInlineStart: space,\n\n\tfontSize: fontSizes,\n\n\tbackground: colors,\n\tbackgroundColor: colors,\n\tbackgroundImage: colors,\n\tborder: colors,\n\tborderBlock: colors,\n\tborderBlockEnd: colors,\n\tborderBlockStart: colors,\n\tborderBottom: colors,\n\tborderBottomColor: colors,\n\tborderColor: colors,\n\tborderInline: colors,\n\tborderInlineEnd: colors,\n\tborderInlineStart: colors,\n\tborderLeft: colors,\n\tborderLeftColor: colors,\n\tborderRight: colors,\n\tborderRightColor: colors,\n\tborderTop: colors,\n\tborderTopColor: colors,\n\tcaretColor: colors,\n\tcolor: colors,\n\tcolumnRuleColor: colors,\n\tfill: colors,\n\toutline: colors,\n\toutlineColor: colors,\n\tstroke: colors,\n\ttextDecorationColor: colors,\n\n\tfontFamily: fonts,\n\n\tfontWeight: fontWeights,\n\n\tlineHeight: lineHeights,\n\n\tletterSpacing: letterSpacings,\n\n\tblockSize: sizes,\n\tminBlockSize: sizes,\n\tmaxBlockSize: sizes,\n\tinlineSize: sizes,\n\tminInlineSize: sizes,\n\tmaxInlineSize: sizes,\n\twidth: sizes,\n\tminWidth: sizes,\n\tmaxWidth: sizes,\n\theight: sizes,\n\tminHeight: sizes,\n\tmaxHeight: sizes,\n\tflexBasis: sizes,\n\tgridTemplateColumns: sizes,\n\tgridTemplateRows: sizes,\n\n\tborderWidth: borderWidths,\n\tborderTopWidth: borderWidths,\n\tborderRightWidth: borderWidths,\n\tborderBottomWidth: borderWidths,\n\tborderLeftWidth: borderWidths,\n\n\tborderStyle: borderStyles,\n\tborderTopStyle: borderStyles,\n\tborderRightStyle: borderStyles,\n\tborderBottomStyle: borderStyles,\n\tborderLeftStyle: borderStyles,\n\n\tborderRadius: radii,\n\tborderTopLeftRadius: radii,\n\tborderTopRightRadius: radii,\n\tborderBottomRightRadius: radii,\n\tborderBottomLeftRadius: radii,\n\n\tboxShadow: shadows,\n\ttextShadow: shadows,\n\n\ttransition: transitions,\n\n\tzIndex: zIndices,\n}\n\n/**\n * @typedef {Object} DefaultThemeMap\n * @property {space} gap\n * @property {space} gridGap\n * @property {space} columnGap\n * @property {space} gridColumnGap\n * @property {space} rowGap\n * @property {space} gridRowGap\n * @property {space} inset\n * @property {space} insetBlock\n * @property {space} insetBlockEnd\n * @property {space} insetBlockStart\n * @property {space} insetInline\n * @property {space} insetInlineEnd\n * @property {space} insetInlineStart\n * @property {space} margin\n * @property {space} marginTop\n * @property {space} marginRight\n * @property {space} marginBottom\n * @property {space} marginLeft\n * @property {space} marginBlock\n * @property {space} marginBlockEnd\n * @property {space} marginBlockStart\n * @property {space} marginInline\n * @property {space} marginInlineEnd\n * @property {space} marginInlineStart\n * @property {space} padding\n * @property {space} paddingTop\n * @property {space} paddingRight\n * @property {space} paddingBottom\n * @property {space} paddingLeft\n * @property {space} paddingBlock\n * @property {space} paddingBlockEnd\n * @property {space} paddingBlockStart\n * @property {space} paddingInline\n * @property {space} paddingInlineEnd\n * @property {space} paddingInlineStart\n * @property {space} top\n * @property {space} right\n * @property {space} bottom\n * @property {space} left\n * @property {space} scrollMargin\n * @property {space} scrollMarginTop\n * @property {space} scrollMarginRight\n * @property {space} scrollMarginBottom\n * @property {space} scrollMarginLeft\n * @property {space} scrollMarginX\n * @property {space} scrollMarginY\n * @property {space} scrollMarginBlock\n * @property {space} scrollMarginBlockEnd\n * @property {space} scrollMarginBlockStart\n * @property {space} scrollMarginInline\n * @property {space} scrollMarginInlineEnd\n * @property {space} scrollMarginInlineStart\n * @property {space} scrollPadding\n * @property {space} scrollPaddingTop\n * @property {space} scrollPaddingRight\n * @property {space} scrollPaddingBottom\n * @property {space} scrollPaddingLeft\n * @property {space} scrollPaddingX\n * @property {space} scrollPaddingY\n * @property {space} scrollPaddingBlock\n * @property {space} scrollPaddingBlockEnd\n * @property {space} scrollPaddingBlockStart\n * @property {space} scrollPaddingInline\n * @property {space} scrollPaddingInlineEnd\n * @property {space} scrollPaddingInlineStart\n\n * @property {fontSizes} fontSize\n\n * @property {colors} background\n * @property {colors} backgroundColor\n * @property {colors} backgroundImage\n * @property {colors} border\n * @property {colors} borderBlock\n * @property {colors} borderBlockEnd\n * @property {colors} borderBlockStart\n * @property {colors} borderBottom\n * @property {colors} borderBottomColor\n * @property {colors} borderColor\n * @property {colors} borderInline\n * @property {colors} borderInlineEnd\n * @property {colors} borderInlineStart\n * @property {colors} borderLeft\n * @property {colors} borderLeftColor\n * @property {colors} borderRight\n * @property {colors} borderRightColor\n * @property {colors} borderTop\n * @property {colors} borderTopColor\n * @property {colors} caretColor\n * @property {colors} color\n * @property {colors} columnRuleColor\n * @property {colors} fill\n * @property {colors} outline\n * @property {colors} outlineColor\n * @property {colors} stroke\n * @property {colors} textDecorationColor\n\n * @property {fonts} fontFamily\n\n * @property {fontWeights} fontWeight\n\n * @property {lineHeights} lineHeight\n\n * @property {letterSpacings} letterSpacing\n\n * @property {sizes} blockSize\n * @property {sizes} minBlockSize\n * @property {sizes} maxBlockSize\n * @property {sizes} inlineSize\n * @property {sizes} minInlineSize\n * @property {sizes} maxInlineSize\n * @property {sizes} width\n * @property {sizes} minWidth\n * @property {sizes} maxWidth\n * @property {sizes} height\n * @property {sizes} minHeight\n * @property {sizes} maxHeight\n * @property {sizes} flexBasis\n * @property {sizes} gridTemplateColumns\n * @property {sizes} gridTemplateRows\n\n * @property {borderWidths} borderWidth\n * @property {borderWidths} borderTopWidth\n * @property {borderWidths} borderRightWidth\n * @property {borderWidths} borderBottomWidth\n * @property {borderWidths} borderLeftWidth\n\n * @property {borderStyles} borderStyle\n * @property {borderStyles} borderTopStyle\n * @property {borderStyles} borderRightStyle\n * @property {borderStyles} borderBottomStyle\n * @property {borderStyles} borderLeftStyle\n\n * @property {radii} borderRadius\n * @property {radii} borderTopLeftRadius\n * @property {radii} borderTopRightRadius\n * @property {radii} borderBottomRightRadius\n * @property {radii} borderBottomLeftRadius\n\n * @property {shadows} boxShadow\n * @property {shadows} textShadow\n\n * @property {transitions} transition\n\n * @property {zIndices} zIndex\n */\n","const stringifyReplacer = (name, data) => (typeof data === 'function' ? { '()': Function.prototype.toString.call(data) } : data)\n\nconst stringify = (value) => JSON.stringify(value, stringifyReplacer)\n\n/** @type {() => <T = any, A = any[], F = (T, ...A) => any>(value: T, apply: F, ...args: A) => ReturnType<F>} */\nexport const createMemo = () => {\n\tconst cache = Object.create(null)\n\n\treturn (value, apply, ...args) => {\n\t\tconst vjson = stringify(value)\n\n\t\treturn vjson in cache ? cache[vjson] : (cache[vjson] = apply(value, ...args))\n\t}\n}\n","export const $$composers = Symbol.for('sxs.composers')\n","/** @type {<T>(target: T, source: any) => T} */\nexport const define = (target, source) => Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\n","export const hasNames = (target) => {\n\tfor (const name in target) return true\n\treturn false\n}\n","const { hasOwnProperty } = Object.prototype\n\n/** @type {<T extends object = { [key: string]: any }, K extends string = string>(target: T, key: K) => K extends keyof T ? true : false} */\nexport const hasOwn = (target, key) => hasOwnProperty.call(target, key)\n","/** Returns the given value converted to kebab-case. */\nexport const toHyphenCase = (/** @type {string} */ value) => (\n\t// ignore kebab-like values\n\tvalue.includes('-')\n\t\t? value\n\t// replace any upper-case letter with a dash and the lower-case variant\n\t: value.replace(/[A-Z]/g, (capital) => '-' + capital.toLowerCase())\n) // prettier-ignore\n","const splitBySpace = /\\s+(?![^()]*\\))/\nconst split = (fn) => (data) => fn(...(typeof data === 'string' ? String(data).split(splitBySpace) : [data]))\n\nexport const toPolyfilledValue = {\n\t// prefixed properties\n\tappearance: (d) => ({ WebkitAppearance: d, appearance: d }),\n\tbackfaceVisibility: (d) => ({ WebkitBackfaceVisibility: d, backfaceVisibility: d }),\n\tbackdropFilter: (d) => ({ WebkitBackdropFilter: d, backdropFilter: d }),\n\tbackgroundClip: (d) => ({ WebkitBackgroundClip: d, backgroundClip: d }),\n\tboxDecorationBreak: (d) => ({ WebkitBoxDecorationBreak: d, boxDecorationBreak: d }),\n\tclipPath: (d) => ({ WebkitClipPath: d, clipPath: d }),\n\tcontent: (d) => ({ content: d.includes('\"') || d.includes(\"'\") || /^([A-Za-z]+\\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(d) ? d : `\"${d}\"` }),\n\thyphens: (d) => ({ WebkitHyphens: d, hyphens: d }),\n\tmaskImage: (d) => ({ WebkitMaskImage: d, maskImage: d }),\n\ttabSize: (d) => ({ MozTabSize: d, tabSize: d }),\n\ttextSizeAdjust: (d) => ({ WebkitTextSizeAdjust: d, textSizeAdjust: d }),\n\tuserSelect: (d) => ({ WebkitUserSelect: d, userSelect: d }),\n\n\t// logical properties\n\tmarginBlock: split((s, e) => ({ marginBlockStart: s, marginBlockEnd: e || s })),\n\tmarginInline: split((s, e) => ({ marginInlineStart: s, marginInlineEnd: e || s })),\n\tmaxSize: split((b, i) => ({ maxBlockSize: b, maxInlineSize: i || b })),\n\tminSize: split((b, i) => ({ minBlockSize: b, minInlineSize: i || b })),\n\tpaddingBlock: split((s, e) => ({ paddingBlockStart: s, paddingBlockEnd: e || s })),\n\tpaddingInline: split((s, e) => ({ paddingInlineStart: s, paddingInlineEnd: e || s })),\n}\n","const mqunit = /([\\d.]+)([^]*)/\n\n/** Returns a media query with polyfilled ranges. */\nexport const toResolvedMediaQueryRanges = (\n\t/** @type {string} */\n\tmedia\n) => media.replace(\n\t/\\(\\s*([\\w-]+)\\s*(=|<|<=|>|>=)\\s*([\\w-]+)\\s*(?:(<|<=|>|>=)\\s*([\\w-]+)\\s*)?\\)/g,\n\t(\n\t\t__,\n\t\t/** @type {string} 1st param, either the name or value in the query. */\n\t\tp1,\n\t\t/** @type {string} 1st operator. */\n\t\to1,\n\t\t/** @type {string} 2nd param, either the name or value in the query. */\n\t\tp2,\n\t\t/** @type {string} Optional 2nd operator. */\n\t\to2,\n\t\t/** @type {string} Optional 3rd param, always a value in the query.*/\n\t\tp3\n\t) => {\n\t\t/** Whether the first param is a value. */\n\t\tconst isP1Value = mqunit.test(p1)\n\n\t\t/** Numeric shift applied to a value when an operator is `<` or `>`. */\n\t\tconst shift = 0.0625 * (isP1Value ? -1 : 1)\n\n\t\tconst [name, value] = isP1Value ? [p2, p1] : [p1, p2]\n\n\t\treturn (\n\t\t\t'(' +\n\t\t\t\t(\n\t\t\t\t\to1[0] === '=' ? '' : (o1[0] === '>' === isP1Value ? 'max-' : 'min-')\n\t\t\t\t) + name + ':' +\n\t\t\t\t(o1[0] !== '=' && o1.length === 1 ? value.replace(mqunit, (_, v, u) => Number(v) + shift * (o1 === '>' ? 1 : -1) + u) : value) +\n\t\t\t\t(\n\t\t\t\t\to2\n\t\t\t\t\t\t? ') and (' + (\n\t\t\t\t\t\t\t(o2[0] === '>' ? 'min-' : 'max-') + name + ':' +\n\t\t\t\t\t\t\t(o2.length === 1 ? p3.replace(mqunit, (_, v, u) => Number(v) + shift * (o2 === '>' ? -1 : 1) + u) : p3)\n\t\t\t\t\t\t)\n\t\t\t\t\t: ''\n\t\t\t\t) +\n\t\t\t')'\n\t\t)\n\t}\n) // prettier-ignore\n","/** Returns selectors resolved from parent selectors and nested selectors. */\nexport const toResolvedSelectors = (\n\t/** @type {string[]} Parent selectors (e.g. `[\"a\", \"button\"]`). */\n\tparentSelectors,\n\t/** @type {string[]} Nested selectors (e.g. `[\"&:hover\", \"&:focus\"]`). */\n\tnestedSelectors,\n) => (\n\tparentSelectors.length\n\t\t? parentSelectors.reduce(\n\t\t\t(resolvedSelectors, parentSelector) => {\n\t\t\t\tresolvedSelectors.push(\n\t\t\t\t\t...nestedSelectors.map(\n\t\t\t\t\t\t(selector) => (\n\t\t\t\t\t\t\tselector.includes('&') ? selector.replace(\n\t\t\t\t\t\t\t\t/&/g,\n\t\t\t\t\t\t\t\t/[ +>|~]/.test(parentSelector) && /&.*&/.test(selector)\n\t\t\t\t\t\t\t\t\t? `:is(${parentSelector})`\n\t\t\t\t\t\t\t\t: parentSelector\n\t\t\t\t\t\t\t) : parentSelector + ' ' + selector\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\n\t\t\t\treturn resolvedSelectors\n\t\t\t},\n\t\t\t[]\n\t\t)\n\t: nestedSelectors\n) // prettier-ignore\n","/** Returns a declaration sizing value with polyfilled sizing keywords. */\nexport const toSizingValue = (/** @type {string} */ declarationName, /** @type {string} */ declarationValue) => (\n\tdeclarationName in sizeProps && typeof declarationValue === 'string'\n\t\t? declarationValue.replace(\n\t\t\t/^((?:[^]*[^\\w-])?)(fit-content|stretch)((?:[^\\w-][^]*)?)$/,\n\t\t\t(data, lead, main, tail) => (\n\t\t\t\tlead + (\n\t\t\t\t\tmain === 'stretch'\n\t\t\t\t\t\t? `-moz-available${tail};${declarationName}:${lead}-webkit-fill-available`\n\t\t\t\t\t: `-moz-fit-content${tail};${declarationName}:${lead}fit-content`\n\t\t\t\t) + tail\n\t\t\t),\n\t\t)\n\t: String(declarationValue)\n) // prettier-ignore\n\n/** CSS Properties whose value include a sizing keyword. */\nconst sizeProps = {\n\tblockSize: 1,\n\theight: 1,\n\tinlineSize: 1,\n\tmaxBlockSize: 1,\n\tmaxHeight: 1,\n\tmaxInlineSize: 1,\n\tmaxWidth: 1,\n\tminBlockSize: 1,\n\tminHeight: 1,\n\tminInlineSize: 1,\n\tminWidth: 1,\n\twidth: 1,\n}\n","/** Returns a filled value with a dash prefix. */\nexport const toTailDashed = (/** @type {string} */ value) => value ? value + '-' : '' // prettier-ignore\n","import { toTailDashed } from './toTailDashed.js'\n\n/** Returns a declaration value with transformed token values. */\nexport const toTokenizedValue = (\n\t/** @type {string} */\n\tvalue,\n\t/** @type {string} */\n\tprefix,\n\t/** @type {string} */\n\tscale,\n) => value.replace(\n\t/([+-])?((?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[Ee][+-]?\\d+)?)?(\\$|--)([$\\w-]+)/g,\n\t($0, direction, multiplier, separator, token) => (\n\t\tseparator == \"$\" == !!multiplier\n\t\t\t? $0\n\t\t: (\n\t\t\tdirection || separator == '--'\n\t\t\t\t? 'calc('\n\t\t\t: ''\n\t\t) + (\n\t\t\t'var(--' + (\n\t\t\t\tseparator === '$'\n\t\t\t\t\t? toTailDashed(prefix) + (\n\t\t\t\t\t\t!token.includes('$')\n\t\t\t\t\t\t\t? toTailDashed(scale)\n\t\t\t\t\t\t: ''\n\t\t\t\t\t) + token.replace(/\\$/g, '-')\n\t\t\t\t: token\n\t\t\t) + ')' + (\n\t\t\t\tdirection || separator == '--'\n\t\t\t\t\t? '*' + (\n\t\t\t\t\t\tdirection || ''\n\t\t\t\t\t) + (\n\t\t\t\t\t\tmultiplier || '1'\n\t\t\t\t\t) + ')'\n\t\t\t\t: ''\n\t\t\t)\n\t\t)\n\t),\n) // prettier-ignore\n","import { toCamelCase } from './toCamelCase.js'\nimport { toHyphenCase } from './toHyphenCase.js'\nimport { toPolyfilledValue } from './toPolyfilledValue.js'\nimport { toResolvedMediaQueryRanges } from './toResolvedMediaQueryRanges.js'\nimport { toResolvedSelectors } from './toResolvedSelectors.js'\nimport { toSizingValue } from './toSizingValue.js'\nimport { toTailDashed } from './toTailDashed.js'\nimport { toTokenizedValue } from './toTokenizedValue.js'\n\n/** @typedef {import('../createCss.js').Config} Config */\n/** @typedef {import('../createCss.js').Style} Style */\n\n/** Comma matcher outside rounded brackets. */\nconst comma = /\\s*,\\s*(?![^()]*\\))/\n\n/** Default toString method of Objects. */\nconst toStringOfObject = Object.prototype.toString\n\nexport const toCssRules = (\n\t/** @type {Style} */ style,\n\t/** @type {string[]} */ selectors,\n\t/** @type {string[]} */ conditions,\n\t/** @type {Config} */ config,\n\t/** @type {(cssText: string) => any} */ onCssText\n) => {\n\t/** @type {[string[], string[], string[]]} CSSOM-compatible rule being created. */\n\tlet currentRule = undefined\n\n\t/** Last utility that was used, cached to prevent recursion. */\n\tlet lastUtil\n\n\t/** Last polyfill that was used, cached to prevent recursion. */\n\tlet lastPoly\n\n\t/** Walks CSS styles and converts them into CSSOM-compatible rules. */\n\tconst walk = (\n\t\t/** @type {Style} Set of CSS styles */ style,\n\t\t/** @type {string[]} Selectors that define the elements to which a set of CSS styles apply. */ selectors,\n\t\t/** @type {string[]} Conditions that define the queries to which a set of CSS styles apply. */ conditions,\n\t) => {\n\t\t/** @type {keyof style} Represents the left-side \"name\" for the property (the at-rule prelude, style-rule selector, or declaration name). */\n\t\tlet name\n\n\t\t/** @type {style[keyof style]} Represents the right-side \"data\" for the property (the rule block, or declaration value). */\n\t\tlet data\n\n\t\tconst each = (style) => {\n\t\t\tfor (name in style) {\n\t\t\t\t/** Whether the current name represents an at-rule. */\n\t\t\t\tconst isAtRuleLike = name.charCodeAt(0) === 64\n\n\t\t\t\tconst datas = isAtRuleLike && Array.isArray(style[name]) ? style[name] : [style[name]]\n\n\t\t\t\tfor (data of datas) {\n\t\t\t\t\t/** Whether the current data represents a nesting rule. */\n\t\t\t\t\tconst isRuleLike = typeof data === 'object' && data && data.toString === toStringOfObject\n\n\t\t\t\t\tconst camelName = toCamelCase(name)\n\n\t\t\t\t\t// if the left-hand \"name\" matches a configured utility\n\t\t\t\t\t// conditionally transform the current data using the configured utility\n\t\t\t\t\tif (camelName in config.utils) {\n\t\t\t\t\t\tconst util = config.utils[camelName]\n\n\t\t\t\t\t\tif (util !== lastUtil) {\n\t\t\t\t\t\t\tlastUtil = util\n\n\t\t\t\t\t\t\teach(util(config)(data))\n\n\t\t\t\t\t\t\tlastUtil = null\n\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise, if the left-hand \"name\" matches a configured polyfill\n\t\t\t\t\t// conditionally transform the current data using the polyfill\n\t\t\t\t\telse if (camelName in toPolyfilledValue) {\n\t\t\t\t\t\tconst poly = toPolyfilledValue[camelName]\n\n\t\t\t\t\t\tif (poly !== lastPoly) {\n\t\t\t\t\t\t\tlastPoly = poly\n\n\t\t\t\t\t\t\teach(poly(data))\n\n\t\t\t\t\t\t\tlastPoly = null\n\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the left-hand \"name\" matches a configured at-rule\n\t\t\t\t\tif (isAtRuleLike) {\n\t\t\t\t\t\t// transform the current name with the configured media at-rule prelude\n\t\t\t\t\t\tname = toResolvedMediaQueryRanges(name.slice(1) in config.media ? '@media ' + config.media[name.slice(1)] : name)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isRuleLike) {\n\t\t\t\t\t\t/** Next conditions, which may include one new condition (if this is an at-rule). */\n\t\t\t\t\t\tconst nextConditions = isAtRuleLike ? conditions.concat(name) : [...conditions]\n\n\t\t\t\t\t\t/** Next selectors, which may include one new selector (if this is not an at-rule). */\n\t\t\t\t\t\tconst nextSelections = isAtRuleLike ? [...selectors] : toResolvedSelectors(selectors, name.split(comma))\n\n\t\t\t\t\t\tif (currentRule !== undefined) {\n\t\t\t\t\t\t\tonCssText(toCssString(...currentRule))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRule = undefined\n\n\t\t\t\t\t\twalk(data, nextSelections, nextConditions)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (currentRule === undefined) currentRule = [[], selectors, conditions]\n\n\t\t\t\t\t\t/** CSS left-hand side value, which may be a specially-formatted custom property. */\n\t\t\t\t\t\tname = !isAtRuleLike && name.charCodeAt(0) === 36 ? `--${toTailDashed(config.prefix)}${name.slice(1).replace(/\\$/g, '-')}` : name\n\n\t\t\t\t\t\t/** CSS right-hand side value, which may be a specially-formatted custom property. */\n\t\t\t\t\t\tdata = (\n\t\t\t\t\t\t\t// preserve object-like data\n\t\t\t\t\t\t\tisRuleLike ? data\n\t\t\t\t\t\t\t// replace specially-marked numeric property values with pixel versions\n\t\t\t\t\t\t\t: typeof data === 'number'\n\t\t\t\t\t\t\t\t? data && camelName in unitProps\n\t\t\t\t\t\t\t\t\t? String(data) + 'px'\n\t\t\t\t\t\t\t\t: String(data)\n\t\t\t\t\t\t\t// replace tokens with stringified primitive values\n\t\t\t\t\t\t\t: toTokenizedValue(\n\t\t\t\t\t\t\t\ttoSizingValue(camelName, data),\n\t\t\t\t\t\t\t\tconfig.prefix,\n\t\t\t\t\t\t\t\tconfig.themeMap[camelName]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tcurrentRule[0].push(`${isAtRuleLike ? `${name} ` : `${toHyphenCase(name)}:`}${data}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\teach(style)\n\n\t\tif (currentRule !== undefined) {\n\t\t\tonCssText(toCssString(...currentRule))\n\t\t}\n\t\tcurrentRule = undefined\n\t}\n\n\twalk(style, selectors, conditions)\n} // prettier-ignore\n\nconst toCssString = (/** @type {string[]} */ declarations, /** @type {string[]} */ selectors, /** @type {string[]} */ conditions) => (\n\t`${conditions.map((condition) => `${condition}{`).join('')}${selectors.length ? `${selectors.join(',')}{` : ''}${declarations.join(';')}${selectors.length ? `}` : ''}${Array(conditions.length ? conditions.length + 1 : 0).join('}')}`\n) // prettier-ignore\n\n/** CSS Properties whose number value may safely be interpretted as a pixel. */\nexport const unitProps = {\n\tanimationDelay: 1,\n\tanimationDuration: 1,\n\tbackgroundSize: 1,\n\tblockSize: 1,\n\tborder: 1,\n\tborderBlock: 1,\n\tborderBlockEnd: 1,\n\tborderBlockEndWidth: 1,\n\tborderBlockStart: 1,\n\tborderBlockStartWidth: 1,\n\tborderBlockWidth: 1,\n\tborderBottom: 1,\n\tborderBottomLeftRadius: 1,\n\tborderBottomRightRadius: 1,\n\tborderBottomWidth: 1,\n\tborderEndEndRadius: 1,\n\tborderEndStartRadius: 1,\n\tborderInlineEnd: 1,\n\tborderInlineEndWidth: 1,\n\tborderInlineStart: 1,\n\tborderInlineStartWidth: 1,\n\tborderInlineWidth: 1,\n\tborderLeft: 1,\n\tborderLeftWidth: 1,\n\tborderRadius: 1,\n\tborderRight: 1,\n\tborderRightWidth: 1,\n\tborderSpacing: 1,\n\tborderStartEndRadius: 1,\n\tborderStartStartRadius: 1,\n\tborderTop: 1,\n\tborderTopLeftRadius: 1,\n\tborderTopRightRadius: 1,\n\tborderTopWidth: 1,\n\tborderWidth: 1,\n\tbottom: 1,\n\tcolumnGap: 1,\n\tcolumnRule: 1,\n\tcolumnRuleWidth: 1,\n\tcolumnWidth: 1,\n\tcontainIntrinsicSize: 1,\n\tflexBasis: 1,\n\tfontSize: 1,\n\tgap: 1,\n\tgridAutoColumns: 1,\n\tgridAutoRows: 1,\n\tgridTemplateColumns: 1,\n\tgridTemplateRows: 1,\n\theight: 1,\n\tinlineSize: 1,\n\tinset: 1,\n\tinsetBlock: 1,\n\tinsetBlockEnd: 1,\n\tinsetBlockStart: 1,\n\tinsetInline: 1,\n\tinsetInlineEnd: 1,\n\tinsetInlineStart: 1,\n\tleft: 1,\n\tletterSpacing: 1,\n\tmargin: 1,\n\tmarginBlock: 1,\n\tmarginBlockEnd: 1,\n\tmarginBlockStart: 1,\n\tmarginBottom: 1,\n\tmarginInline: 1,\n\tmarginInlineEnd: 1,\n\tmarginInlineStart: 1,\n\tmarginLeft: 1,\n\tmarginRight: 1,\n\tmarginTop: 1,\n\tmaxBlockSize: 1,\n\tmaxHeight: 1,\n\tmaxInlineSize: 1,\n\tmaxWidth: 1,\n\tminBlockSize: 1,\n\tminHeight: 1,\n\tminInlineSize: 1,\n\tminWidth: 1,\n\toffsetDistance: 1,\n\toffsetRotate: 1,\n\toutline: 1,\n\toutlineOffset: 1,\n\toutlineWidth: 1,\n\toverflowClipMargin: 1,\n\tpadding: 1,\n\tpaddingBlock: 1,\n\tpaddingBlockEnd: 1,\n\tpaddingBlockStart: 1,\n\tpaddingBottom: 1,\n\tpaddingInline: 1,\n\tpaddingInlineEnd: 1,\n\tpaddingInlineStart: 1,\n\tpaddingLeft: 1,\n\tpaddingRight: 1,\n\tpaddingTop: 1,\n\tperspective: 1,\n\tright: 1,\n\trowGap: 1,\n\tscrollMargin: 1,\n\tscrollMarginBlock: 1,\n\tscrollMarginBlockEnd: 1,\n\tscrollMarginBlockStart: 1,\n\tscrollMarginBottom: 1,\n\tscrollMarginInline: 1,\n\tscrollMarginInlineEnd: 1,\n\tscrollMarginInlineStart: 1,\n\tscrollMarginLeft: 1,\n\tscrollMarginRight: 1,\n\tscrollMarginTop: 1,\n\tscrollPadding: 1,\n\tscrollPaddingBlock: 1,\n\tscrollPaddingBlockEnd: 1,\n\tscrollPaddingBlockStart: 1,\n\tscrollPaddingBottom: 1,\n\tscrollPaddingInline: 1,\n\tscrollPaddingInlineEnd: 1,\n\tscrollPaddingInlineStart: 1,\n\tscrollPaddingLeft: 1,\n\tscrollPaddingRight: 1,\n\tscrollPaddingTop: 1,\n\tshapeMargin: 1,\n\ttextDecoration: 1,\n\ttextDecorationThickness: 1,\n\ttextIndent: 1,\n\ttextUnderlineOffset: 1,\n\ttop: 1,\n\ttransitionDelay: 1,\n\ttransitionDuration: 1,\n\tverticalAlign: 1,\n\twidth: 1,\n\twordSpacing: 1,\n}\n","/** Returns the given value converted to camel-case. */\nexport const toCamelCase = (/** @type {string} */ value) => (!/[A-Z]/.test(value) ? value.replace(/-[^]/g, (capital) => capital[1].toUpperCase()) : value)\n","const toAlphabeticChar = (/** @type {number} */ code) => String.fromCharCode(code + (code > 25 ? 39 : 97))\n\nconst toAlphabeticName = (/** @type {number} */ code) => {\n\tlet name = ''\n\tlet x\n\n\tfor (x = Math.abs(code); x > 52; x = (x / 52) | 0) name = toAlphabeticChar(x % 52) + name\n\n\treturn toAlphabeticChar(x % 52) + name\n}\n\nconst toPhash = (/** @type {number} */ h, /** @type {string} */ x) => {\n\tlet i = x.length\n\twhile (i) h = (h * 33) ^ x.charCodeAt(--i)\n\treturn h\n}\n\nexport const toHash = (/** @type {object} */ value) => toAlphabeticName(\n\ttoPhash(\n\t\t5381,\n\t\tJSON.stringify(value)\n\t) >>> 0\n) // prettier-ignore\n","import { $$composers } from '../utility/composers.js'\nimport { createMemo } from '../utility/createMemo.js'\nimport { define } from '../utility/define.js'\nimport { hasNames } from '../utility/hasNames.js'\nimport { hasOwn } from '../utility/hasOwn.js'\n\nimport { toCssRules } from '../convert/toCssRules.js'\nimport { toHash } from '../convert/toHash.js'\nimport { toTailDashed } from '../convert/toTailDashed.js'\n\n/** @typedef {import('./css').Composer} Composer */\n/** @typedef {import('./css').Config} Config */\n/** @typedef {import('./css').InitComposer} InitComposer */\n/** @typedef {import('./css').PrefilledVariants} PrefilledVariants */\n/** @typedef {import('./css').Render} Render */\n/** @typedef {import('./css').Styling} Styling */\n/** @typedef {import('./css').UndefinedVariants} UndefinedVariants */\n/** @typedef {import('./css').VariantMatcher} VariantMatcher */\n/** @typedef {import('./css').VariantProps} VariantProps */\n/** @typedef {import('./css').VariantTuple} VariantTuple */\n\n/** @typedef {import('../createSheet').SheetGroup} SheetGroup */\n\nconst createComponentFunctionMap = createMemo()\n\n/** Returns a function that applies component styles. */\nexport const createComponentFunction = (/** @type {Config} */ config, /** @type {SheetGroup} */ sheet) =>\n\tcreateComponentFunctionMap(config, () => (...args) => {\n\t\t/** @type {string | Function} Component type, which may be a function or a string. */\n\t\tlet componentType = null\n\n\t\t/** @type {Set<Composer>} Composers. */\n\t\tconst composers = new Set()\n\n\t\tfor (const arg of args) {\n\t\t\t// skip any void argument\n\t\t\tif (arg == null) continue\n\n\t\t\tswitch (typeof arg) {\n\t\t\t\tcase 'function':\n\t\t\t\t\t// allow a composer-less function to be the component type\n\t\t\t\t\tif (componentType == null && !arg[$$composers]) {\n\t\t\t\t\t\tcomponentType = arg\n\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\tcase 'object':\n\t\t\t\t\t// allow a type property to be this component type\n\t\t\t\t\tif (componentType == null && arg.type != null) componentType = arg.type\n\n\t\t\t\t\t// copy all composers into this component\n\t\t\t\t\tif ($$composers in arg)\n\t\t\t\t\t\tfor (const composer of arg[$$composers]) {\n\t\t\t\t\t\t\tcomposers.add(composer)\n\t\t\t\t\t\t}\n\t\t\t\t\t// otherwise, add a new composer to this component\n\t\t\t\t\telse if (!('$$typeof' in arg)) {\n\t\t\t\t\t\tconst composer = createComposer(arg, config)\n\n\t\t\t\t\t\tcomposers.add(composer)\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak\n\n\t\t\t\tcase 'string':\n\t\t\t\t\tcomponentType = arg\n\t\t\t}\n\t\t}\n\n\t\t// set the component type if none was set\n\t\tif (componentType == null) componentType = 'span'\n\t\tif (!composers.size) composers.add(['PJLV', {}, [], [], {}, []])\n\n\t\treturn createRenderer(config, componentType, composers, sheet)\n\t})\n\n/** Creates a composer from a configuration object. */\nconst createComposer = (/** @type {InitComposer} */ { variants: initSingularVariants, compoundVariants: initCompoundVariants, defaultVariants: initDefaultVariants, ...style }, /** @type {Config} */ config) => {\n\t/** @type {string} Composer Unique Identifier. @see `{CONFIG_PREFIX}-?c-{STYLE_HASH}` */\n\tconst className = `${toTailDashed(config.prefix)}c-${toHash(style)}`\n\n\t/** @type {VariantTuple[]} */\n\tconst singularVariants = []\n\n\t/** @type {VariantTuple[]} */\n\tconst compoundVariants = []\n\n\t/** @type {PrefilledVariants} */\n\tconst prefilledVariants = Object.create(null)\n\n\t/** @type {UndefinedVariants} */\n\tconst undefinedVariants = []\n\n\tfor (const variantName in initDefaultVariants) {\n\t\tprefilledVariants[variantName] = String(initDefaultVariants[variantName])\n\t}\n\n\t// add singular variants\n\tif (typeof initSingularVariants === 'object' && initSingularVariants) {\n\t\tfor (const name in initSingularVariants) {\n\t\t\tif (!hasOwn(prefilledVariants, name)) prefilledVariants[name] = 'undefined'\n\n\t\t\tconst variantPairs = initSingularVariants[name]\n\n\t\t\tfor (const pair in variantPairs) {\n\t\t\t\t/** @type {VariantMatcher} */\n\t\t\t\tconst vMatch = { [name]: String(pair) }\n\n\t\t\t\tif (String(pair) === 'undefined') undefinedVariants.push(name)\n\n\t\t\t\tconst vStyle = variantPairs[pair]\n\n\t\t\t\t/** @type {VariantTuple} */\n\t\t\t\tconst variant = [vMatch, vStyle, !hasNames(vStyle)]\n\n\t\t\t\tsingularVariants.push(variant)\n\t\t\t}\n\t\t}\n\t}\n\n\t// add compound variants\n\tif (typeof initCompoundVariants === 'object' && initCompoundVariants) {\n\t\tfor (const compoundVariant of initCompoundVariants) {\n\t\t\t/** @type {InitComposer['compoundVariants']} */\n\t\t\tlet { css: vStyle, ...vMatch } = compoundVariant\n\n\t\t\tvStyle = typeof vStyle === 'object' && vStyle || {}\n\n\t\t\t// serialize all compound variant pairs\n\t\t\tfor (const name in vMatch) vMatch[name] = String(vMatch[name])\n\n\t\t\t/** @type {VariantTuple} */\n\t\t\tconst variant = [vMatch, vStyle, !hasNames(vStyle)]\n\n\t\t\tcompoundVariants.push(variant)\n\t\t}\n\t}\n\n\treturn /** @type {Composer} */ ([className, style, singularVariants, compoundVariants, prefilledVariants, undefinedVariants])\n} // prettier-ignore\n\nconst createRenderer = (\n\t/** @type {Config} */ config,\n\t/** @type {string | Function} */ type,\n\t/** @type {Set<Composer>} */ composers,\n\t/** @type {import('../createSheet').SheetGroup} */ sheet\n) => {\n\tconst [\n\t\tinitialClassName,\n\t\tbaseClassNames,\n\t\tprefilledVariants,\n\t\tundefinedVariants\n\t] = getPreparedDataFromComposers(composers)\n\n\tconst selector = `.${initialClassName}`\n\n\t/** @type {Render} */\n\tconst render = (props) => {\n\t\tprops = typeof props === 'object' && props || emptyProps\n\n\t\t// 1. we cannot mutate `props`\n\t\t// 2. we delete variant props\n\t\t// 3. we delete `css` prop\n\t\t// therefore: we must create a new props & css variables\n\t\tconst { css, ...forwardProps } = props\n\n\t\t/** @type {VariantProps} */\n\t\tconst variantProps = {}\n\n\t\tfor (const name in prefilledVariants) {\n\t\t\tdelete forwardProps[name]\n\n\t\t\tif (name in props) {\n\t\t\t\tlet data = props[name]\n\n\t\t\t\tif (typeof data === 'object' && data) {\n\t\t\t\t\tvariantProps[name] = {\n\t\t\t\t\t\t'@initial': prefilledVariants[name],\n\t\t\t\t\t\t...data,\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata = String(data)\n\n\t\t\t\t\tvariantProps[name] = (\n\t\t\t\t\t\tdata === 'undefined' && !undefinedVariants.has(name)\n\t\t\t\t\t\t\t? prefilledVariants[name]\n\t\t\t\t\t\t: data\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvariantProps[name] = prefilledVariants[name]\n\t\t\t}\n\t\t}\n\n\t\tconst classSet = new Set([ ...baseClassNames ])\n\n\t\t// 1. builds up the variants (fills in defaults, calculates @initial on responsive, etc.)\n\t\t// 2. iterates composers\n\t\t// 2.1. add their base class\n\t\t// 2.2. iterate their variants, add their variant classes\n\t\t// 2.2.1. orders regular variants before responsive variants\n\t\t// 2.3. iterate their compound variants, add their compound variant classes\n\n\t\tfor (const [composerBaseClass, composerBaseStyle, singularVariants, compoundVariants] of composers) {\n\t\t\tif (!sheet.rules.styled.cache.has(composerBaseClass)) {\n\t\t\t\tsheet.rules.styled.cache.add(composerBaseClass)\n\n\t\t\t\ttoCssRules(composerBaseStyle, [`.${composerBaseClass}`], [], config, cssText => {\n\t\t\t\t\tsheet.rules.styled.apply(cssText)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst singularVariantsToAdd = getTargetVariantsToAdd(singularVariants, variantProps, config.media)\n\t\t\tconst compoundVariantsToAdd = getTargetVariantsToAdd(compoundVariants, variantProps, config.media, true)\n\n\t\t\tfor (const variantToAdd of singularVariantsToAdd) {\n\t\t\t\tif (variantToAdd === undefined) continue\n\n\t\t\t\tfor (const [vClass, vStyle] of variantToAdd) {\n\t\t\t\t\tconst variantClassName = `${composerBaseClass}-${toHash(vStyle)}-${vClass}`\n\n\t\t\t\t\tclassSet.add(variantClassName)\n\n\t\t\t\t\tif (!sheet.rules.onevar.cache.has(variantClassName)) {\n\t\t\t\t\t\tsheet.rules.onevar.cache.add(variantClassName)\n\n\t\t\t\t\t\ttoCssRules(vStyle, [`.${variantClassName}`], [], config, cssText => {\n\t\t\t\t\t\t\tsheet.rules.onevar.apply(cssText)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const variantToAdd of compoundVariantsToAdd) {\n\t\t\t\tif (variantToAdd === undefined) continue\n\n\t\t\t\tfor (const [vClass, vStyle] of variantToAdd) {\n\t\t\t\t\tconst variantClassName = `${composerBaseClass}-${toHash(vStyle)}-${vClass}`\n\n\t\t\t\t\tclassSet.add(variantClassName)\n\n\t\t\t\t\tif (!sheet.rules.allvar.cache.has(variantClassName)) {\n\t\t\t\t\t\tsheet.rules.allvar.cache.add(variantClassName)\n\n\t\t\t\t\t\ttoCssRules(vStyle, [`.${variantClassName}`], [], config, cssText => {\n\t\t\t\t\t\t\tsheet.rules.allvar.apply(cssText)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// apply css property styles\n\t\tif (typeof css === 'object' && css) {\n\t\t\t/** @type {string} Inline Class Unique Identifier. @see `{COMPOSER_UUID}-i{VARIANT_UUID}-css` */\n\t\t\tconst iClass = `${initialClassName}-i${toHash(css)}-css`\n\n\t\t\tclassSet.add(iClass)\n\n\t\t\tif (!sheet.rules.inline.cache.has(iClass)) {\n\t\t\t\tsheet.rules.inline.cache.add(iClass)\n\n\t\t\t\ttoCssRules(css, [`.${iClass}`], [], config, cssText => {\n\t\t\t\t\tsheet.rules.inline.apply(cssText)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tfor (const propClassName of String(props.className || '').trim().split(/\\s+/)) {\n\t\t\tif (propClassName) classSet.add(propClassName)\n\t\t}\n\n\t\tconst renderedClassName = forwardProps.className = [ ...classSet ].join(' ')\n\n\t\tconst renderedToString = () => renderedClassName\n\n\t\treturn {\n\t\t\ttype,\n\t\t\tclassName: renderedClassName,\n\t\t\tselector,\n\t\t\tprops: forwardProps,\n\t\t\ttoString: renderedToString,\n\t\t}\n\t}\n\n\tconst toString = () => {\n\t\tif (!sheet.rules.styled.cache.has(initialClassName)) render()\n\t\treturn initialClassName\n\t}\n\n\treturn define(render, {\n\t\ttype,\n\t\tclassName: initialClassName,\n\t\tselector,\n\t\t[$$composers]: composers,\n\t\ttoString,\n\t})\n} // prettier-ignore\n\n/** Returns useful data that can be known before rendering. */\nconst getPreparedDataFromComposers = (/** @type {Set<Composer>} */ composers) => {\n\t/** Class name of the first composer. */\n\tlet initialClassName = ''\n\n\t/** @type {string[]} Combined class names for all composers. */\n\tconst combinedClassNames = []\n\n\t/** @type {PrefilledVariants} Combined variant pairings for all composers. */\n\tconst combinedPrefilledVariants = {}\n\n\t/** @type {UndefinedVariants} List of variant names that can have an \"undefined\" pairing. */\n\tconst combinedUndefinedVariants = []\n\n\tfor (const [className, , , , prefilledVariants, undefinedVariants] of composers) {\n\t\tif (initialClassName === '') initialClassName = className\n\n\t\tcombinedClassNames.push(className)\n\n\t\tcombinedUndefinedVariants.push(...undefinedVariants)\n\n\t\tfor (const name in prefilledVariants) {\n\t\t\tconst data = prefilledVariants[name]\n\t\t\tif (combinedPrefilledVariants[name] === undefined || data !== 'undefined' || undefinedVariants.includes(data)) combinedPrefilledVariants[name] = data\n\t\t}\n\t}\n\n\t/** @type {[string, string[], PrefilledVariants, Set<UndefinedVariants>]} */\n\tconst preparedData = [\n\t\tinitialClassName,\n\t\tcombinedClassNames,\n\t\tcombinedPrefilledVariants,\n\t\tnew Set(combinedUndefinedVariants)\n\t]\n\n\treturn preparedData\n} // prettier-ignore\n\nconst getTargetVariantsToAdd = (\n\t/** @type {VariantTuple[]} */\n\ttargetVariants,\n\t/** @type {VariantProps} */\n\tvariantProps,\n\t/** @type {Config['media']} */\n\tmedia,\n\t/** @type {boolean} */\n\tisCompoundVariant,\n) => {\n\t/** @type {[string, Styling][][]} */\n\tconst targetVariantsToAdd = []\n\n\ttargetVariants: for (let [vMatch, vStyle, vEmpty] of targetVariants) {\n\t\t// skip empty variants\n\t\tif (vEmpty) continue\n\n\t\t/** Position the variant should be inserted into. */\n\t\tlet vOrder = 0\n\n\t\t/** @type {string & keyof typeof vMatch} */\n\t\tlet vName\n\n\t\tfor (vName in vMatch) {\n\t\t\tconst vPair = vMatch[vName]\n\n\t\t\tlet pPair = variantProps[vName]\n\n\t\t\t// exact matches\n\t\t\tif (pPair === vPair) continue\n\t\t\t// responsive matches\n\t\t\telse if (typeof pPair === 'object' && pPair) {\n\t\t\t\t/** @type {boolean} Whether the responsive variant is matched. */\n\t\t\t\tlet didMatch\n\n\t\t\t\tlet qOrder = 0\n\n\t\t\t\tfor (const query in pPair) {\n\t\t\t\t\tif (vPair === String(pPair[query])) {\n\t\t\t\t\t\tif (query !== '@initial') {\n\t\t\t\t\t\t\tvStyle = {\n\t\t\t\t\t\t\t\t[query in media ? media[query] : query]: vStyle,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvOrder += qOrder\n\n\t\t\t\t\t\tdidMatch = true\n\t\t\t\t\t}\n\n\t\t\t\t\t++qOrder\n\t\t\t\t}\n\n\t\t\t\tif (!didMatch) continue targetVariants\n\t\t\t}\n\n\t\t\t// non-matches\n\t\t\telse continue targetVariants\n\t\t}\n\n\t\t;(targetVariantsToAdd[vOrder] = targetVariantsToAdd[vOrder] || []).push([isCompoundVariant ? `cv` : `${vName}-${vMatch[vName]}`, vStyle])\n\t}\n\n\treturn targetVariantsToAdd\n}\n\n/** Fallback props object used when no props are passed. */\nconst emptyProps = {}\n","import { createMemo } from '../utility/createMemo.js'\nimport { define } from '../utility/define.js'\n\nimport { toCssRules } from '../convert/toCssRules.js'\nimport { toHash } from '../convert/toHash.js'\n\n/** @typedef {import('./global').Config} Config */\n/** @typedef {import('./global').Styling} Styling */\n\n/** @typedef {import('../createSheet').SheetGroup} SheetGroup */\n\nconst createGlobalFunctionMap = createMemo()\n\n/** Returns a function that applies global styles. */\nexport const createGlobalFunction = (/** @type {Config} */ config, /** @type {SheetGroup} */ sheet) =>\n\tcreateGlobalFunctionMap(config, () => (/** @type {Styling} */ style) => {\n\t\tstyle = (typeof style === 'object' && style) || {}\n\n\t\tconst uuid = toHash(style)\n\n\t\tconst render = () => {\n\t\t\tif (!sheet.rules.global.cache.has(uuid)) {\n\t\t\t\tsheet.rules.global.cache.add(uuid)\n\n\t\t\t\t// support @import rules\n\t\t\t\tif ('@import' in style) {\n\t\t\t\t\tlet importIndex = [].indexOf.call(sheet.sheet.cssRules, sheet.rules.themed.group) - 1\n\n\t\t\t\t\t// wrap import in quotes as a convenience\n\t\t\t\t\tfor (let importValue of [].concat(style['@import'])) {\n\t\t\t\t\t\timportValue = importValue.includes('\"') || importValue.includes(\"'\") ? importValue : `\"${importValue}\"`\n\n\t\t\t\t\t\tsheet.sheet.insertRule(`@import ${importValue};`, importIndex++)\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete style['@import']\n\t\t\t\t}\n\n\t\t\t\ttoCssRules(style, [], [], config, (cssText) => {\n\t\t\t\t\tsheet.rules.global.apply(cssText)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn ''\n\t\t}\n\n\t\treturn define(render, {\n\t\t\ttoString: render,\n\t\t})\n\t})\n","import { createMemo } from '../utility/createMemo.js'\nimport { define } from '../utility/define.js'\n\nimport { toCssRules } from '../convert/toCssRules.js'\nimport { toHash } from '../convert/toHash.js'\nimport { toTailDashed } from '../convert/toTailDashed.js'\n\n/** @typedef {import('..').Config} Config */\n/** @typedef {import('..').Style} Style */\n/** @typedef {import('..').GroupSheet} GroupSheet */\n\nconst createKeyframesFunctionMap = createMemo()\n\n/** Returns a function that applies a keyframes rule. */\nexport const createKeyframesFunction = (/** @type {Config} */ config, /** @type {GroupSheet} */ sheet) => (\n\tcreateKeyframesFunctionMap(config, () => (style) => {\n\t\t/** @type {string} Keyframes Unique Identifier. @see `{CONFIG_PREFIX}-?k-{KEYFRAME_UUID}` */\n\t\tconst name = `${toTailDashed(config.prefix)}k-${toHash(style)}`\n\n\t\tconst render = () => {\n\t\t\tif (!sheet.rules.global.cache.has(name)) {\n\t\t\t\tsheet.rules.global.cache.add(name)\n\n\t\t\t\tconst cssRules = []\n\n\t\t\t\ttoCssRules(style, [], [], config, (cssText) => cssRules.push(cssText))\n\n\t\t\t\tconst cssText = `@keyframes ${name}{${cssRules.join('')}}`\n\n\t\t\t\tsheet.rules.global.apply(cssText)\n\t\t\t}\n\n\t\t\treturn name\n\t\t}\n\n\t\treturn define(render, {\n\t\t\tget name() {\n\t\t\t\treturn render()\n\t\t\t},\n\t\t\ttoString: render,\n\t\t})\n\t})\n) // prettier-ignore\n","import { toTailDashed } from './convert/toTailDashed.js'\n\nexport class ThemeToken {\n\tconstructor(token, value, scale, prefix) {\n\t\tthis.token = token == null ? '' : String(token)\n\t\tthis.value = value == null ? '' : String(value)\n\t\tthis.scale = scale == null ? '' : String(scale)\n\t\tthis.prefix = prefix == null ? '' : String(prefix)\n\t}\n\n\tget computedValue() {\n\t\treturn 'var(' + this.variable + ')'\n\t}\n\n\tget variable() {\n\t\treturn '--' + toTailDashed(this.prefix) + toTailDashed(this.scale) + this.token\n\t}\n\n\ttoString() {\n\t\treturn this.computedValue\n\t}\n}\n","import { ThemeToken } from '../ThemeToken.js'\nimport { createMemo } from '../utility/createMemo.js'\n\nimport { toHash } from '../convert/toHash.js'\nimport { toTailDashed } from '../convert/toTailDashed.js'\nimport { toTokenizedValue } from '../convert/toTokenizedValue.js'\n\n/** @typedef {import('./createCss.js').Config} Config */\n/** @typedef {import('./createCss.js').Style} Style */\n/** @typedef {import('./createSheet.js').GroupSheet} GroupSheet */\n\nconst createThemeFunctionMap = createMemo()\n\n/** Returns a function that applies a theme and returns tokens of that theme. */\nexport const createThemeFunction = (/** @type {Config} */ config, /** @type {GroupSheet} */ sheet) => (\n\tcreateThemeFunctionMap(config, () => (className, style) => {\n\t\t// theme is the first argument if it is an object, otherwise the second argument as an object\n\t\tstyle = typeof className === 'object' && className || Object(style)\n\n\t\t// class name is the first argument if it is a string, otherwise an empty string\n\t\tclassName = typeof className === 'string' ? className : ''\n\n\t\t/** @type {string} Theme name. @see `{CONFIG_PREFIX}t-{THEME_UUID}` */\n\t\tclassName = className || `${toTailDashed(config.prefix)}t-${toHash(style)}`\n\n\t\tconst selector = `.${className}`\n\n\t\tconst themeObject = {}\n\t\tconst cssProps = []\n\n\t\tfor (const scale in style) {\n\t\t\tthemeObject[scale] = {}\n\n\t\t\tfor (const token in style[scale]) {\n\t\t\t\tconst propertyName = `--${toTailDashed(config.prefix)}${scale}-${token}`\n\t\t\t\tconst propertyValue = toTokenizedValue(String(style[scale][token]), config.prefix, scale)\n\n\t\t\t\tthemeObject[scale][token] = new ThemeToken(token, propertyValue, scale, config.prefix)\n\n\t\t\t\tcssProps.push(`${propertyName}:${propertyValue}`)\n\t\t\t}\n\t\t}\n\n\t\tconst render = () => {\n\t\t\tif (cssProps.length && !sheet.rules.themed.cache.has(className)) {\n\t\t\t\tsheet.rules.themed.cache.add(className)\n\n\t\t\t\tconst rootPrelude = style === config.theme ? ':root,' : ''\n\t\t\t\tconst cssText = `${rootPrelude}.${className}{${cssProps.join(';')}}`\n\n\t\t\t\tsheet.rules.themed.apply(cssText)\n\t\t\t}\n\n\t\t\treturn className\n\t\t}\n\n\t\treturn {\n\t\t\t...themeObject,\n\t\t\tclassName,\n\t\t\tselector,\n\t\t\ttoString: render,\n\t\t}\n\t})\n) // prettier-ignore\n","/** @typedef {import('./createSheet').RuleGroup} RuleGroup */\n/** @typedef {import('./createSheet').RuleGroupNames} RuleGroupNames */\n/** @typedef {import('./createSheet').SheetGroup} SheetGroup */\n\n/** @type {RuleGroupNames} */\nconst names = ['themed', 'global', 'styled', 'onevar', 'allvar', 'inline']\n\nexport const createSheet = (/** @type {DocumentOrShadowRoot} */ root) => {\n\t/** @type {SheetGroup} Object hosting the hydrated stylesheet. */\n\tlet groupSheet\n\n\tconst reset = () => {\n\t\tif (groupSheet) {\n\t\t\tconst { rules, sheet } = groupSheet\n\n\t\t\tif (!sheet.deleteRule) {\n\t\t\t\twhile (Object(Object(sheet.cssRules)[0]).type === 3) sheet.cssRules.splice(0, 1)\n\n\t\t\t\tsheet.cssRules = []\n\t\t\t}\n\n\t\t\tfor (const groupName in rules) {\n\t\t\t\tdelete rules[groupName]\n\t\t\t}\n\n\t\t\tif (sheet.ownerRule) {\n\t\t\t\tsheet.ownerRule.textContent = sheet.ownerRule.textContent\n\t\t\t}\n\t\t}\n\n\t\t/** @type {StyleSheetList} */\n\t\tconst sheets = Object(root).styleSheets || []\n\n\t\t// iterate all stylesheets until a hydratable stylesheet is found\n\t\tfor (const sheet of sheets) {\n\t\t\tif (sheet.href && !sheet.href.startsWith(location.origin)) continue\n\n\t\t\tfor (let index = 0, rules = sheet.cssRules; rules[index]; ++index) {\n\t\t\t\t/** @type {CSSStyleRule} Possible indicator rule. */\n\t\t\t\tconst check = Object(rules[index])\n\n\t\t\t\t// a hydratable set of rules will start with a style rule (type: 1), ignore all others\n\t\t\t\tif (check.type !== 1) continue\n\n\t\t\t\t/** @type {CSSMediaRule} Possible styling group. */\n\t\t\t\tconst group = Object(rules[index + 1])\n\n\t\t\t\t// a hydratable set of rules will follow with a media rule (type: 4), ignore all others\n\t\t\t\tif (group.type !== 4) continue\n\n\t\t\t\t++index\n\n\t\t\t\tconst { cssText } = check\n\n\t\t\t\t// a hydratable style rule will have a selector of `--stitches`, ignore all others\n\t\t\t\tif (!cssText.startsWith('--stitches')) continue\n\n\t\t\t\tconst cache = cssText.slice(16, -3).trim().split(/\\s+/)\n\n\t\t\t\t/** @type {GroupName} Name of the group. */\n\t\t\t\tconst groupName = names[cache[0]]\n\n\t\t\t\t// a hydratable style rule will have a parsable group, ignore all others\n\t\t\t\tif (!groupName) continue\n\n\t\t\t\t// create a group sheet if one does not already exist\n\t\t\t\tif (!groupSheet) groupSheet = { sheet, reset, rules: {} }\n\n\t\t\t\t// add the group to the group sheet\n\t\t\t\tgroupSheet.rules[groupName] = { group, index, cache: new Set(cache) }\n\t\t\t}\n\n\t\t\t// if a hydratable stylesheet is found, stop looking\n\t\t\tif (groupSheet) break\n\t\t}\n\n\t\t// if no hydratable stylesheet is found\n\t\tif (!groupSheet) {\n\t\t\tconst createCSSMediaRule = (/** @type {string} */ sourceCssText, type) => {\n\t\t\t\treturn /** @type {CSSMediaRule} */ ({\n\t\t\t\t\ttype,\n\t\t\t\t\tcssRules: [],\n\t\t\t\t\tinsertRule(cssText, index) {\n\t\t\t\t\t\tthis.cssRules.splice(index, 0, createCSSMediaRule(cssText, { import: 3, undefined: 1 }[(cssText.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4))\n\t\t\t\t\t},\n\t\t\t\t\tget cssText() {\n\t\t\t\t\t\treturn sourceCssText === '@media{}' ? `@media{${[].map.call(this.cssRules, (cssRule) => cssRule.cssText).join('')}}` : sourceCssText\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgroupSheet = {\n\t\t\t\tsheet: root ? (root.head || root).appendChild(document.createElement('style')).sheet : createCSSMediaRule('', 'text/css'),\n\t\t\t\trules: {},\n\t\t\t\treset,\n\t\t\t\ttoString() {\n\t\t\t\t\tconst { cssRules } = groupSheet.sheet\n\t\t\t\t\treturn [].map\n\t\t\t\t\t\t.call(cssRules, (cssRule, cssRuleIndex) => {\n\t\t\t\t\t\t\tconst { cssText } = cssRule\n\n\t\t\t\t\t\t\tlet lastRuleCssText = ''\n\n\t\t\t\t\t\t\tif (cssText.startsWith('--stitches')) return ''\n\n\t\t\t\t\t\t\tif (cssRules[cssRuleIndex - 1] && (lastRuleCssText = cssRules[cssRuleIndex - 1].cssText).startsWith('--stitches')) {\n\t\t\t\t\t\t\t\tif (!cssRule.cssRules.length) return ''\n\n\t\t\t\t\t\t\t\tfor (const name in groupSheet.rules) {\n\t\t\t\t\t\t\t\t\tif (groupSheet.rules[name].group === cssRule) {\n\t\t\t\t\t\t\t\t\t\treturn `--stitches{--:${[...groupSheet.rules[name].cache].join(' ')}}${cssText}`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn cssRule.cssRules.length ? `${lastRuleCssText}${cssText}` : ''\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn cssText\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t\tconst { sheet, rules } = groupSheet\n\n\t\t// conditionally generate the inline group\n\t\tif (!rules.inline) {\n\t\t\tconst index = sheet.cssRules.length\n\t\t\tsheet.insertRule('@media{}', index)\n\t\t\tsheet.insertRule('--stitches{--:5}', index)\n\n\t\t\trules.inline = {\n\t\t\t\tindex: index,\n\t\t\t\tgroup: sheet.cssRules[index + 1],\n\t\t\t\tcache: new Set([5]),\n\t\t\t}\n\t\t}\n\t\taddApplyToGroup(rules.inline)\n\n\t\t// conditionally generate the allvar group\n\t\tif (!rules.allvar) {\n\t\t\tconst index = rules.inline.index\n\t\t\tsheet.insertRule('@media{}', index)\n\t\t\tsheet.insertRule('--stitches{--:4}', index)\n\n\t\t\trules.allvar = {\n\t\t\t\tindex: index,\n\t\t\t\tgroup: sheet.cssRules[index + 1],\n\t\t\t\tcache: new Set([4]),\n\t\t\t}\n\t\t}\n\t\taddApplyToGroup(rules.allvar)\n\n\t\t// conditionally generate the onevar group\n\t\tif (!rules.onevar) {\n\t\t\tconst index = rules.allvar.index\n\t\t\tsheet.insertRule('@media{}', index)\n\t\t\tsheet.insertRule('--stitches{--:3}', index)\n\n\t\t\trules.onevar = {\n\t\t\t\tindex: index,\n\t\t\t\tgroup: sheet.cssRules[index + 1],\n\t\t\t\tcache: new Set([3]),\n\t\t\t}\n\t\t}\n\t\taddApplyToGroup(rules.onevar)\n\n\t\t// conditionally generate the styled group\n\t\tif (!rules.styled) {\n\t\t\tconst index = rules.onevar.index\n\t\t\tsheet.insertRule('@media{}', index)\n\t\t\tsheet.insertRule('--stitches{--:2}', index)\n\n\t\t\trules.styled = {\n\t\t\t\tindex: index,\n\t\t\t\tgroup: sheet.cssRules[index + 1],\n\t\t\t\tcache: new Set([2]),\n\t\t\t}\n\t\t}\n\t\taddApplyToGroup(rules.styled)\n\n\t\t// conditionally generate the global group\n\t\tif (!rules.global) {\n\t\t\tconst index = rules.styled.index\n\t\t\tsheet.insertRule('@media{}', index)\n\t\t\tsheet.insertRule('--stitches{--:1}', index)\n\n\t\t\trules.global = {\n\t\t\t\tindex: index,\n\t\t\t\tgroup: sheet.cssRules[index + 1],\n\t\t\t\tcache: new Set([1]),\n\t\t\t}\n\t\t}\n\t\taddApplyToGroup(rules.global)\n\n\t\t// conditionally generate the themed group\n\t\tif (!rules.themed) {\n\t\t\tconst index = rules.global.index\n\t\t\tsheet.insertRule('@media{}', index)\n\t\t\tsheet.insertRule('--stitches{--:0}', index)\n\n\t\t\trules.themed = {\n\t\t\t\tindex: index,\n\t\t\t\tgroup: sheet.cssRules[index + 1],\n\t\t\t\tcache: new Set([0]),\n\t\t\t}\n\t\t}\n\t\taddApplyToGroup(rules.themed)\n\t}\n\n\treset()\n\n\treturn groupSheet\n}\n\nconst addApplyToGroup = (/** @type {RuleGroup} */ group) => {\n\tconst groupingRule = group.group\n\n\tlet index = groupingRule.cssRules.length\n\n\tgroup.apply = (cssText) => {\n\t\ttry {\n\t\t\tgroupingRule.insertRule(cssText, index)\n\n\t\t\t++index\n\t\t} catch {\n\t\t\t// do nothing and continue\n\t\t}\n\t}\n}\n","import { defaultMedia } from './default/defaultMedia.js'\nimport { defaultThemeMap } from './default/defaultThemeMap.js'\n\nimport { createMemo } from './utility/createMemo.js'\n\nimport { createComponentFunction } from './features/css.js'\nimport { createGlobalFunction } from './features/global.js'\nimport { createKeyframesFunction } from './features/keyframes.js'\nimport { createThemeFunction } from './features/theme.js'\n\nimport { createSheet } from './createSheet.js'\n\n/** @typedef {import('.').Config} Config */\n\nconst createCssMap = createMemo()\n\nexport const createCss = (/** @type {Partial<Config>} */ config) => {\n\tlet didRun = false\n\n\tconst instance = createCssMap(config, (/** @type {Partial<Config>} */ initConfig) => {\n\t\tdidRun = true\n\n\t\tinitConfig = typeof initConfig === 'object' && initConfig || {}\n\n\t\t// internal configuration\n\t\tconst prefix = 'prefix' in initConfig ? String(initConfig.prefix) : ''\n\t\tconst media = { ...defaultMedia, ...(typeof initConfig.media === 'object' && initConfig.media || {}) }\n\t\tconst root = typeof initConfig.root === 'object' ? initConfig.root || null : globalThis.document || null\n\t\tconst theme = typeof initConfig.theme === 'object' && initConfig.theme || {}\n\t\tconst themeMap = typeof initConfig.themeMap === 'object' && initConfig.themeMap || { ...defaultThemeMap }\n\t\tconst utils = typeof initConfig.utils === 'object' && initConfig.utils || {}\n\n\t\t/** @type {Config} External configuration. */\n\t\tconst config = {\n\t\t\tprefix,\n\t\t\tmedia,\n\t\t\troot,\n\t\t\ttheme,\n\t\t\tthemeMap,\n\t\t\tutils,\n\t\t}\n\n\t\t/** Internal stylesheet. */\n\t\tconst sheet = createSheet(root)\n\n\t\tconst returnValue = {\n\t\t\tcss: createComponentFunction(config, sheet),\n\t\t\tglobal: createGlobalFunction(config, sheet),\n\t\t\tkeyframes: createKeyframesFunction(config, sheet),\n\t\t\ttheme: createThemeFunction(config, sheet),\n\t\t\treset() {\n\t\t\t\tsheet.reset()\n\t\t\t\tdefaultTheme.toString()\n\t\t\t},\n\t\t\tsheet,\n\t\t\tconfig,\n\t\t\tprefix,\n\t\t\tgetCssString: sheet.toString,\n\t\t\ttoString: sheet.toString,\n\t\t}\n\n\t\tconst defaultTheme = returnValue.theme(theme)\n\t\tObject.assign(returnValue.theme, defaultTheme)\n\t\tdefaultTheme.toString()\n\n\t\treturn returnValue\n\t})\n\n\tif (!didRun) instance.reset()\n\n\treturn instance\n} // prettier-ignore\n","import { createCss } from './createCss.js'\nimport { defaultThemeMap } from './default/defaultThemeMap.js'\nimport { getCachedConfig } from './utility/getCachedConfig.js'\n\nconst css = (...args) => getCachedConfig().css(...args)\nconst global = (...args) => getCachedConfig().global(...args)\nconst keyframes = (...args) => getCachedConfig().keyframes(...args)\n\nexport { createCss, css, global, keyframes, defaultThemeMap }\n"]}