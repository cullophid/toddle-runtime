{"id":"formula/functions/NOT.tsx","dependencies":[{"name":"/Users/cylindo/code/toddle-runtime/tsconfig.json","includedInParent":true,"mtime":1629568165591},{"name":"/Users/cylindo/code/toddle-runtime/package.json","includedInParent":true,"mtime":1629723682127},{"name":"../formula","loc":{"line":1,"column":29},"parent":"/Users/cylindo/code/toddle-runtime/formula/functions/NOT.tsx","resolved":"/Users/cylindo/code/toddle-runtime/formula/formula.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolver = exports.template = void 0;\n\nvar _formula = require(\"../formula\");\n\nvar template = {\n  type: \"function\",\n  name: \"NOT\",\n  arguments: [{\n    name: \"Input\",\n    formula: {\n      type: \"boolean\",\n      name: \"Boolean\",\n      value: true\n    }\n  }]\n};\nexports.template = template;\n\nvar resolver = function resolver(f, input) {\n  var _a;\n\n  return !(0, _formula.applyFormula)((_a = f.arguments[0]) === null || _a === void 0 ? void 0 : _a.formula, input);\n};\n\nexports.resolver = resolver;"},"sourceMaps":{"js":{"mappings":[{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":7},"generated":{"line":10,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":13},"generated":{"line":10,"column":4}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":21},"generated":{"line":10,"column":12}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":43},"generated":{"line":10,"column":15}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":4,"column":2},"generated":{"line":11,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":4,"column":2},"generated":{"line":11,"column":2}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":4,"column":6},"generated":{"line":11,"column":6}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":4,"column":8},"generated":{"line":11,"column":8}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":43},"generated":{"line":11,"column":18}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":5,"column":2},"generated":{"line":12,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":5,"column":2},"generated":{"line":12,"column":2}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":5,"column":6},"generated":{"line":12,"column":6}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":5,"column":8},"generated":{"line":12,"column":8}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":43},"generated":{"line":12,"column":13}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":13,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":13,"column":2}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":6,"column":11},"generated":{"line":13,"column":11}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":6,"column":13},"generated":{"line":13,"column":13}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":14}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":8,"column":6},"generated":{"line":14,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":8,"column":6},"generated":{"line":14,"column":4}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":8,"column":10},"generated":{"line":14,"column":8}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":8,"column":12},"generated":{"line":14,"column":10}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":7,"column":4},"generated":{"line":14,"column":17}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":6},"generated":{"line":15,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":6},"generated":{"line":15,"column":4}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":13},"generated":{"line":15,"column":11}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":15},"generated":{"line":15,"column":13}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":17},"generated":{"line":16,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":17},"generated":{"line":16,"column":6}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":21},"generated":{"line":16,"column":10}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":23},"generated":{"line":16,"column":12}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":15},"generated":{"line":16,"column":21}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":34},"generated":{"line":17,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":34},"generated":{"line":17,"column":6}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":38},"generated":{"line":17,"column":10}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":40},"generated":{"line":17,"column":12}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":15},"generated":{"line":17,"column":21}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":51},"generated":{"line":18,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":51},"generated":{"line":18,"column":6}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":56},"generated":{"line":18,"column":11}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":58},"generated":{"line":18,"column":13}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":9,"column":15},"generated":{"line":19,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":7,"column":4},"generated":{"line":20,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":6,"column":13},"generated":{"line":20,"column":3}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":43},"generated":{"line":21,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":3,"column":7},"generated":{"line":21,"column":1}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":7},"generated":{"line":24,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":13},"generated":{"line":24,"column":4}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":21},"generated":{"line":24,"column":12}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":24,"column":15}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":13},"generated":{"line":24,"column":24}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":24,"column":32}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":25},"generated":{"line":24,"column":33}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":24,"column":34}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":47},"generated":{"line":24,"column":36}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":24},"generated":{"line":24,"column":41}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":57},"generated":{"line":24,"column":43}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":2},"generated":{"line":27,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":9},"generated":{"line":27,"column":9}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":10},"generated":{"line":27,"column":10}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":37}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":38}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":40}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":43}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":24},"generated":{"line":27,"column":44}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":25},"generated":{"line":27,"column":45}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":54}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":35},"generated":{"line":27,"column":55}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":56}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":57}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":63}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":67}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":71}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":73}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":78}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":83}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":84}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":87}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":92}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":23},"generated":{"line":27,"column":93}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":96}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":37},"generated":{"line":27,"column":98}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":39},"generated":{"line":27,"column":99}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":10},"generated":{"line":27,"column":106}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":48},"generated":{"line":27,"column":108}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":10},"generated":{"line":27,"column":113}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":15,"column":2},"generated":{"line":27,"column":114}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":16,"column":1},"generated":{"line":28,"column":0}},{"source":"formula/functions/NOT.tsx","name":null,"original":{"line":14,"column":7},"generated":{"line":28,"column":1}}],"sources":{"formula/functions/NOT.tsx":"import { applyFormula, FunctionOperation } from \"../formula\";\n\nexport const template: FunctionOperation = {\n  type: \"function\",\n  name: \"NOT\",\n  arguments: [\n    {\n      name: \"Input\",\n      formula: { type: \"boolean\", name: \"Boolean\", value: true },\n    },\n  ],\n};\n\nexport const resolver = (f: FunctionOperation, input: any) => {\n  return !applyFormula(f.arguments[0]?.formula, input);\n};\n"},"lineCount":null}},"error":null,"hash":"f737781e3d981db57defbef4310d831d","cacheData":{"env":{}}}