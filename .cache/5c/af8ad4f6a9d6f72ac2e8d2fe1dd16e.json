{"id":"mJBL","dependencies":[{"name":"/Users/cylindo/code/toddle-runtime/package.json","includedInParent":true,"mtime":1629670590222},{"name":"/Users/cylindo/code/toddle-runtime/node_modules/lodash/package.json","includedInParent":true,"mtime":1629394836990},{"name":"./_baseEach","loc":{"line":1,"column":23},"parent":"/Users/cylindo/code/toddle-runtime/node_modules/lodash/_baseAggregator.js","resolved":"/Users/cylindo/code/toddle-runtime/node_modules/lodash/_baseEach.js"}],"generated":{"js":"var e=require(\"./_baseEach\");function r(r,n,u,o){return e(r,function(e,r,t){n(o,e,u(e),t)}),o}module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":14,"column":0},"generated":{"line":1,"column":29}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":14,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":14,"column":0},"generated":{"line":1,"column":40}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":14,"column":0},"generated":{"line":1,"column":42}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":14,"column":0},"generated":{"line":1,"column":44}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":14,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":18,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":15,"column":0},"generated":{"line":1,"column":56}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":15,"column":0},"generated":{"line":1,"column":58}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":15,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":15,"column":0},"generated":{"line":1,"column":69}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":15,"column":0},"generated":{"line":1,"column":71}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":15,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":16,"column":0},"generated":{"line":1,"column":76}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":16,"column":0},"generated":{"line":1,"column":78}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":16,"column":0},"generated":{"line":1,"column":80}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":16,"column":0},"generated":{"line":1,"column":82}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":16,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":16,"column":0},"generated":{"line":1,"column":87}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":18,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":21,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":21,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/lodash/_baseAggregator.js","original":{"line":21,"column":0},"generated":{"line":1,"column":109}}],"sources":{"node_modules/lodash/_baseAggregator.js":"var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n"},"lineCount":null}},"error":null,"hash":"6897fb3a33c81c8d1c5e420e6c096d92","cacheData":{"env":{}}}